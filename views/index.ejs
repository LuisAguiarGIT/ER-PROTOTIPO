<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
    integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">

  <!-- Style CSS -->
  <style>
    body {
      background-color: #333333;
    }

    textarea {
      background: url(http://i.imgur.com/2cOaJ.png);
      background-attachment: local;
      background-repeat: no-repeat;
      padding-left: 30px;
      padding-top: 10px;
      border-color: #ccc;
      background-color: #333;
      resize: both;
      font-size: 12px;
      box-shadow: 1px 10px 10px #222;
    }

    footer {
      text-align: center;
    }

    #footer {
      color: #ccc;
    }

    #texto {
      color: lightskyblue;
    }coment

    #coment{
      color: lightskyblue;
    }

    .comentario{
      color: lightskyblue;
    }

    #cabecalho {
      background-color: #444;
      border-radius: 10px;
      height: 80px;
      margin-top: 20px;
      margin-bottom: 20px;
      margin-left: 20px;
      margin-right: 20px;
      background-image: linear-gradient(#444, #222);
    }

    #titulo {
      color: yellow;
      text-align: center;
    }
    #upload{
      color:#ccc;
    }

  </style>

  <title><%= title %></title>
</head>

<body>
  <div class="shadow p-3 mb-5" id="cabecalho">
    <h1 id="titulo"><%= title %></h1>
  </div>

  <div class="container">
    <div class="row">

      <form method="POST" action="/ola">

        <textarea id="texto" wrap="off" rows="20" cols="180" name="texto"></textarea>


        <br>
        <br>

        <div>
          <button id="launch-bt" type="button" class="btn btn-outline-light" onclick="abrir()">
            Comentários
          </button>
        </div>
        <br>
        <div>
          <input type="file" name="files[]" id="upload" size=30 accept="">
        </div>
      </form>

      <!-- Modal -->
      <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Comentários</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">


              <div class="card text-white bg-secondary mb-3">
                <div class="card-header">Código selecionado:</div>
                <div class="card-body">
                  <p class="card-text" id="demo"></p>
                </div>
                <div class="card-footer text-white">
                  <div id="s_com">
                    <h7>Quer adicionar comentários ?</h7>
                    <br>
                    <button type="button" class="btn" onclick="comentar('sim')">Sim</button>
                    <button type="button" class="btn" data-dismiss="modal">Não</button>
                    <div id="s_com_sim">
                      <textarea id="coment" class="comentario"></textarea>
                      <!-- Gravação -->
                      <section class="main-controls">
                        <button class="record">COMEÇA GRAVAÇÃO</button>
                        <button class="stop">PARAR GRAVAÇÃO</button>
                      </section>
                      <section class="sound-clips"></section>
                    </div>
                  </div>
                </div>
              </div>

              <div id="ler_comentario">



              </div>

              <div id="reproduzir_audio">

              </div>

            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" onclick="comentar('enviar')">Save changes</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div>
    <footer>
      <p id="footer">&copy; Grupo 5 - Engenharia de Requisitos 2019/2020</p>
    </footer>
  </div>





  <!-- Button trigger modal -->


  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
    integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
    crossorigin="anonymous"></script>

  <script>

    function abrir() {
      ShowSelection();

      if (selectedText.length > 0) {
        $("#exampleModal").modal()
        ler_comentario();
        comentar();

      }
    }

    var selectedText;
    function ShowSelection() {

      var textComponent = document.getElementById('texto');
      if (textComponent.selectionStart !== undefined) {// Standards Compliant Version
        var startPos = textComponent.selectionStart;
        var endPos = textComponent.selectionEnd;
        selectedText = textComponent.value.substring(startPos, endPos);
      }
      else if (document.selection !== undefined) {// IE Version
        textComponent.focus();
        var sel = document.selection.createRange();
        selectedText = sel.text;
      }
      document.getElementById("demo").innerHTML = selectedText;
    }

    function ler_comentario() {

      var comment = $.trim($("#coment").val());
      var data = {};

      data.what = "ler_comentario";
      data.id = selectedText;

      $.ajax({
        type: 'POST',
        data: JSON.stringify(data),
        contentType: 'application/json',
        url: '/',
        success: function (data1) {


          $("#ler_comentario").empty();

          console.log($('#ler_comentario').removeData);

          console.log('success');
          console.log(JSON.stringify(data1));

          console.log(data1.length);

          if (data1.length == 0) {
            document.getElementById("ler_comentario").innerHTML = "<span id='1'>Não existem comentários!</span>";

          } else {

            //var tickets = data.tickets;
            for (var i = 0; i < data1.length; i++) {
              var panelBody = "";
              panelBody += '<div id="2" class="card">';
              panelBody += '<div class="card-header">';
              panelBody += (i + 1) + 'º Comentário';
              panelBody += '</div>';
              panelBody += '<div class="card-body">';
              panelBody += '<blockquote class="blockquote mb-0">';
              panelBody += '<p>' + data1[i][1] + '</p>';
              // panelBody += '<audio href="' + data1[i][2] + '" controls' + '>' + '</audio>';
              panelBody += '<audio controls src="' + data1[i][2] + '"> </audio>';
              panelBody += '<footer class="blockquote-footer">' + data1[i][3] + '</footer>';
              panelBody += '</blockquote>';
              panelBody += '</div>';
              panelBody += '</div>';
              panelBody += '<br>';
              $('#ler_comentario').append(panelBody);
            }

          }




        }
      });


    }


    var s_com = document.getElementById("s_com");
    var s_com_sim = document.getElementById("s_com_sim");



    function comentar(texto) {
      console.log(texto);
      s_com_sim.style.display = "none";
      if (texto == ! "sim") {
        s_com.style.display = "none";
      }

      if (texto == 'sim') {
        s_com_sim.style.display = "block";
      }

      if (texto == "enviar") {
        var comment = $.trim($("#coment").val());
        var data = {};

        data.what = "enviar_comentario";
        data.id = selectedText;
        data.comment = comment;
        data.audio = audioURL;
        // Marcador
        data.transcricao = transcricao;

        $.ajax({
          type: 'POST',
          data: JSON.stringify(data),
          contentType: 'application/json',
          url: '/',
          success: function (data) {
            console.log('success');
            console.log(JSON.stringify(data));
            ler_comentario();

          }
        })
        document.getElementById("coment").innerHTML = "";

      }
    }

    let audioURL;
    let transcricao = "";
    // set up basic variables for app

    const record = document.querySelector('.record');
    const stop = document.querySelector('.stop');
    const soundClips = document.querySelector('.sound-clips');
    const mainSection = document.querySelector('.main-controls');

    const recording = document.createElement('section');

    let recognition = new webkitSpeechRecognition();

    // disable stop button while not recording

    stop.disabled = true;

    //main block for doing the audio recording

    if (navigator.mediaDevices.getUserMedia) {
      console.log('getUserMedia supportado.');

      const constraints = { audio: true };
      let chunks = [];

      let onSuccess = function (stream) {
        const mediaRecorder = new MediaRecorder(stream);

        record.onclick = function () {
          mediaRecorder.start();
          console.log(mediaRecorder.state);
          console.log("Gravação iniciada");
          record.style.background = "red";

          stop.disabled = false;
          record.disabled = true;

          voiceRecognition();
        }

        stop.onclick = function () {
          mediaRecorder.stop();
          console.log(mediaRecorder.state);
          console.log("Gravação interrompida");
          record.style.background = "";
          record.style.color = "";
          // mediaRecorder.requestData();

          stop.disabled = true;
          record.disabled = false;

          recognition.continuous = false;
          recognition.stop();
        }

        mediaRecorder.onstop = function (e) {
          console.log("Dados disponíveis depois de MediaRecorder.stop() ser chamado");

          // const clipName = prompt('Introduza o nome do ficheiro audio', 'Nome do ficheiro');

          // const clipContainer = document.createElement('article');
          // const clipLabel = document.createElement('p');
          // const audio = document.createElement('audio');
          // const deleteButton = document.createElement('button');
          // const downloadButton = document.createElement('a');

          // clipContainer.classList.add('clip');
          // audio.setAttribute('controls', '');
          // audio.setAttribute('controls', 'download')
          // deleteButton.textContent = 'Delete';
          // deleteButton.className = 'delete';

          // if (clipName === null) {
          //   clipLabel.textContent = 'Nome do ficheiro';
          // } else {
          //   clipLabel.textContent = clipName;
          // }

          // clipContainer.appendChild(audio);
          // clipContainer.appendChild(clipLabel);
          // clipContainer.appendChild(deleteButton);
          // recording.appendChild(clipContainer);
          // soundClips.appendChild(recording);

          // audio.controls = true;
          const blob = new Blob(chunks, { 'type': 'audio/mpeg' });
          chunks = [];
          audioURL = window.URL.createObjectURL(blob);
          console.log(audioURL);
          // audio.src = audioURL;
          // console.log("Gravação interrompida");
          // downloadButton.href = audioURL;
          // downloadButton.download = "ficheiroAudio.mp3";
          // downloadButton.innerHTML = "DOWNLOAD";
          // soundClips.appendChild(downloadButton);

          // deleteButton.onclick = function (e) {
          //   let evtTgt = e.target;
          //   evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);
          // }

          // clipLabel.onclick = function () {
          //   const existingName = clipLabel.textContent;
          //   const newClipName = prompt('Introduza um novo nome para o ficheiro de som');
          //   if (newClipName === null) {
          //     clipLabel.textContent = existingName;
          //   } else {
          //     clipLabel.textContent = newClipName;
          //   }
          // }
        }

        mediaRecorder.ondataavailable = function (e) {
          chunks.push(e.data);
        }
      }

      let onError = function (err) {
        console.log('O erro seguinte ocorreu: ' + err);
      }

      navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);

    } else {
      console.log('getUserMedia não suportado!');
    }

    function voiceRecognition() {
      recognition.continuous = true;

      recognition.onresult = function (event) {
        console.log(event);
        // let output = document.createElement("p");
        // output.innerHTML = "";

        for (let i = 0; i < event.results.length; i++) {
          // output.innerHTML = output.innerHTML + event.results[i][0].transcript;
          transcricao = transcricao + event.results[i][0].transcript;
        }
        document.getElementById("coment").append(transcricao + "\n");
        transcricao = "";
      }
      recognition.start();
    }
  </script>
  <script>
    function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object
    
        // use the 1st file from the list
        f = files[0];
    
        var reader = new FileReader();
    
        // Closure to capture the file information.
        reader.onload = (function(theFile) {
            return function(e) {
    
              jQuery( '#texto' ).val( e.target.result );
            };
          })(f);
    
          // Read in the image file as a data URL.
          reader.readAsText(f);
      }
    
      document.getElementById('upload').addEventListener('change', handleFileSelect, false);
  </script>
</body>

</html>